# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.require_version ">= 1.8.0"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Using Puppet Labs official vagrant boxes, from: https://vagrantcloud.com/puppetlabs
  config.vm.box = "centos7-puppet3.8.1"

  config.vm.provision :shell, :path => "./.vagrant_puppet/init.sh"

  config.hostmanager.ip_resolver = proc do |vm, resolving_vm|
    if hostname = (vm.ssh_info && vm.ssh_info[:host])
        `host #{hostname}`.split("\n").last[/(\d+\.\d+\.\d+\.\d+)/, 1]
    end
  end

  config.hostmanager.enabled = true
  config.hostmanager.manage_host = false
  config.hostmanager.manage_guest = false

  config.vm.define 'default' do |node|
    node.vm.hostname = 'default.vagrant.local'
    node.vm.network "forwarded_port", guest: 80, host: 80
    node.vm.network :private_network, ip: '192.168.42.42'
    node.hostmanager.aliases = %w(web.vagrant.local db.vagrant.local)
    node.vm.provider 'virtualbox' do |vbox|
        vbox.memory = 1024
        vbox.cpus = 2
    end
    node.vm.provision :hostmanager
  end

  config.vm.provision :puppet do |puppet|
    puppet.environment_path = '.vagrant_puppet/environments'
    puppet.environment = 'vagrant'
    puppet.options = '--verbose --parser future'
    puppet.hiera_config_path = 'hiera/hiera.yaml'    
  end

  config.vm.provision :serverspec do |spec|
    spec.pattern = 'serverspec/*_spec.rb'
  end

end

# need serverspec
# vagrant plugin install vagrant-serverspec
unless Vagrant.has_plugin?('vagrant-serverspec')
  raise 'vagrant-serverspec is not installed!'
end

# need hostmanager
# vagrant plugin install vagrant-hostmanager
# https://github.com/smdahlen/vagrant-hostmanager
unless Vagrant.has_plugin?('vagrant-hostmanager')
  raise 'vagrant-hostmanager is not installed!'
end
